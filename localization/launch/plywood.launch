<launch>
    <include file="$(find plywood_mazes)/launch/maze_3_6x6.launch"/>
    <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
    <arg name="x_pos" default="0.0"/>
    <arg name="y_pos" default="0.0"/>
    <arg name="z_pos" default="0.0"/>

    <arg name="map_file" default="$(find plywood_mazes)/maps/maze_3.yaml"/>
    <arg name="open_rviz" default="true"/>
      <!-- TurtleBot3 -->
    <include file="$(find turtlebot3_bringup)/launch/turtlebot3_remote.launch">
        <arg name="model" value="$(arg model)" />
    </include>
    <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" respawn="true"/>
    <node pkg="amcl" type="amcl" name="amcl" output="screen">
        <param name="initial_pose_x" value="0.0"/>
        <param name="initial_pose_y" value="0.0"/>
        <param name="initial_pose_a" value="0.0"/>
        <param name="tf-broadcast" value="true"/>
        <param name="first_map_only" value="true" />
    </node>
    <node pkg="localization" type="localize_robot.py" name="localize_robot" output="screen"/>
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />
    <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf"  args="-urdf -model turtlebot3_$(arg model) -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -param robot_description" />

      <!-- rviz -->
  <group if="$(arg open_rviz)">
    <node pkg="rviz" type="rviz" name="rviz" required="true"
          args="-d $(find localization)/rviz/localization_sim.rviz"/>
  </group>

</launch>